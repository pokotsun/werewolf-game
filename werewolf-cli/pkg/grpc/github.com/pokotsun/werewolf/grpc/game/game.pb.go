// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: proto/game.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetActorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword  string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId        string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActorRequest) Reset() {
	*x = GetActorRequest{}
	mi := &file_proto_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActorRequest) ProtoMessage() {}

func (x *GetActorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActorRequest.ProtoReflect.Descriptor instead.
func (*GetActorRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{0}
}

func (x *GetActorRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetActorRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetActorRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetActorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actor         string                 `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActorResponse) Reset() {
	*x = GetActorResponse{}
	mi := &file_proto_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActorResponse) ProtoMessage() {}

func (x *GetActorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActorResponse.ProtoReflect.Descriptor instead.
func (*GetActorResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{1}
}

func (x *GetActorResponse) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

type GetGameStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword  string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId        string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameStatusRequest) Reset() {
	*x = GetGameStatusRequest{}
	mi := &file_proto_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameStatusRequest) ProtoMessage() {}

func (x *GetGameStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameStatusRequest.ProtoReflect.Descriptor instead.
func (*GetGameStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{2}
}

func (x *GetGameStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetGameStatusRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetGameStatusRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetGameStatusResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Day                int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Term               int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	DidAction          bool                   `protobuf:"varint,3,opt,name=did_action,json=didAction,proto3" json:"did_action,omitempty"`
	WaitingActionCount int32                  `protobuf:"varint,4,opt,name=waiting_action_count,json=waitingActionCount,proto3" json:"waiting_action_count,omitempty"`
	IsPlaying          bool                   `protobuf:"varint,5,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing,omitempty"`
	PlayerDeadAlive    []*PlayerDeadAlive     `protobuf:"bytes,6,rep,name=player_dead_alive,json=playerDeadAlive,proto3" json:"player_dead_alive,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetGameStatusResponse) Reset() {
	*x = GetGameStatusResponse{}
	mi := &file_proto_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameStatusResponse) ProtoMessage() {}

func (x *GetGameStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameStatusResponse.ProtoReflect.Descriptor instead.
func (*GetGameStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{3}
}

func (x *GetGameStatusResponse) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *GetGameStatusResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *GetGameStatusResponse) GetDidAction() bool {
	if x != nil {
		return x.DidAction
	}
	return false
}

func (x *GetGameStatusResponse) GetWaitingActionCount() int32 {
	if x != nil {
		return x.WaitingActionCount
	}
	return 0
}

func (x *GetGameStatusResponse) GetIsPlaying() bool {
	if x != nil {
		return x.IsPlaying
	}
	return false
}

func (x *GetGameStatusResponse) GetPlayerDeadAlive() []*PlayerDeadAlive {
	if x != nil {
		return x.PlayerDeadAlive
	}
	return nil
}

type PlayerDeadAlive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	IsDead        bool                   `protobuf:"varint,2,opt,name=is_dead,json=isDead,proto3" json:"is_dead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerDeadAlive) Reset() {
	*x = PlayerDeadAlive{}
	mi := &file_proto_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerDeadAlive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDeadAlive) ProtoMessage() {}

func (x *PlayerDeadAlive) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDeadAlive.ProtoReflect.Descriptor instead.
func (*PlayerDeadAlive) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerDeadAlive) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerDeadAlive) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

type GetDeadPlayersLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword  string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId        string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeadPlayersLogRequest) Reset() {
	*x = GetDeadPlayersLogRequest{}
	mi := &file_proto_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeadPlayersLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeadPlayersLogRequest) ProtoMessage() {}

func (x *GetDeadPlayersLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeadPlayersLogRequest.ProtoReflect.Descriptor instead.
func (*GetDeadPlayersLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{5}
}

func (x *GetDeadPlayersLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDeadPlayersLogRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetDeadPlayersLogRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetDeadPlayersLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*DeadPlayerLog       `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeadPlayersLogResponse) Reset() {
	*x = GetDeadPlayersLogResponse{}
	mi := &file_proto_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeadPlayersLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeadPlayersLogResponse) ProtoMessage() {}

func (x *GetDeadPlayersLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeadPlayersLogResponse.ProtoReflect.Descriptor instead.
func (*GetDeadPlayersLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeadPlayersLogResponse) GetLogs() []*DeadPlayerLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type DeadPlayerLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	TargetPlayer  *string                `protobuf:"bytes,3,opt,name=target_player,json=targetPlayer,proto3,oneof" json:"target_player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeadPlayerLog) Reset() {
	*x = DeadPlayerLog{}
	mi := &file_proto_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadPlayerLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadPlayerLog) ProtoMessage() {}

func (x *DeadPlayerLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadPlayerLog.ProtoReflect.Descriptor instead.
func (*DeadPlayerLog) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{7}
}

func (x *DeadPlayerLog) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DeadPlayerLog) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *DeadPlayerLog) GetTargetPlayer() string {
	if x != nil && x.TargetPlayer != nil {
		return *x.TargetPlayer
	}
	return ""
}

type GetSelfActionLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword  string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId        string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfActionLogRequest) Reset() {
	*x = GetSelfActionLogRequest{}
	mi := &file_proto_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfActionLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfActionLogRequest) ProtoMessage() {}

func (x *GetSelfActionLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfActionLogRequest.ProtoReflect.Descriptor instead.
func (*GetSelfActionLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{8}
}

func (x *GetSelfActionLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetSelfActionLogRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetSelfActionLogRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetSelfActionLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*SelfActionLog       `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfActionLogResponse) Reset() {
	*x = GetSelfActionLogResponse{}
	mi := &file_proto_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfActionLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfActionLogResponse) ProtoMessage() {}

func (x *GetSelfActionLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfActionLogResponse.ProtoReflect.Descriptor instead.
func (*GetSelfActionLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{9}
}

func (x *GetSelfActionLogResponse) GetLogs() []*SelfActionLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type SelfActionLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Day            int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Term           int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	TargetUserName string                 `protobuf:"bytes,3,opt,name=target_user_name,json=targetUserName,proto3" json:"target_user_name,omitempty"`
	Result         bool                   `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SelfActionLog) Reset() {
	*x = SelfActionLog{}
	mi := &file_proto_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelfActionLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfActionLog) ProtoMessage() {}

func (x *SelfActionLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfActionLog.ProtoReflect.Descriptor instead.
func (*SelfActionLog) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{10}
}

func (x *SelfActionLog) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *SelfActionLog) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *SelfActionLog) GetTargetUserName() string {
	if x != nil {
		return x.TargetUserName
	}
	return ""
}

func (x *SelfActionLog) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ExecSelfActionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword   string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId         string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,4,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecSelfActionRequest) Reset() {
	*x = ExecSelfActionRequest{}
	mi := &file_proto_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecSelfActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecSelfActionRequest) ProtoMessage() {}

func (x *ExecSelfActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecSelfActionRequest.ProtoReflect.Descriptor instead.
func (*ExecSelfActionRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{11}
}

func (x *ExecSelfActionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExecSelfActionRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *ExecSelfActionRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ExecSelfActionRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

type ExecSelfActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int32                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecSelfActionResponse) Reset() {
	*x = ExecSelfActionResponse{}
	mi := &file_proto_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecSelfActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecSelfActionResponse) ProtoMessage() {}

func (x *ExecSelfActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecSelfActionResponse.ProtoReflect.Descriptor instead.
func (*ExecSelfActionResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{12}
}

func (x *ExecSelfActionResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GetGameResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword  string                 `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	GameId        string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameResultRequest) Reset() {
	*x = GetGameResultRequest{}
	mi := &file_proto_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameResultRequest) ProtoMessage() {}

func (x *GetGameResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameResultRequest.ProtoReflect.Descriptor instead.
func (*GetGameResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{13}
}

func (x *GetGameResultRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetGameResultRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetGameResultRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GetGameResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *int32                 `protobuf:"varint,1,opt,name=result,proto3,oneof" json:"result,omitempty"` // 0: 市民陣営, 1: 人狼陣営
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameResultResponse) Reset() {
	*x = GetGameResultResponse{}
	mi := &file_proto_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameResultResponse) ProtoMessage() {}

func (x *GetGameResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameResultResponse.ProtoReflect.Descriptor instead.
func (*GetGameResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_proto_rawDescGZIP(), []int{14}
}

func (x *GetGameResultResponse) GetResult() int32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

var File_proto_game_proto protoreflect.FileDescriptor

var file_proto_game_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x69, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x64, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x11, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x4b,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x65, 0x61, 0x64, 0x22, 0x71, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x44,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x0d, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x77,
	0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63,
	0x53, 0x65, 0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0xd2, 0x03, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x1e,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x53, 0x65, 0x6c, 0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x65, 0x6c,
	0x66, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x66, 0x0a, 0x28, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x6b, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6b, 0x6f, 0x74, 0x73, 0x75, 0x6e, 0x2f, 0x77,
	0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_game_proto_rawDescOnce sync.Once
	file_proto_game_proto_rawDescData = file_proto_game_proto_rawDesc
)

func file_proto_game_proto_rawDescGZIP() []byte {
	file_proto_game_proto_rawDescOnce.Do(func() {
		file_proto_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_proto_rawDescData)
	})
	return file_proto_game_proto_rawDescData
}

var file_proto_game_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_game_proto_goTypes = []any{
	(*GetActorRequest)(nil),           // 0: game.GetActorRequest
	(*GetActorResponse)(nil),          // 1: game.GetActorResponse
	(*GetGameStatusRequest)(nil),      // 2: game.GetGameStatusRequest
	(*GetGameStatusResponse)(nil),     // 3: game.GetGameStatusResponse
	(*PlayerDeadAlive)(nil),           // 4: game.PlayerDeadAlive
	(*GetDeadPlayersLogRequest)(nil),  // 5: game.GetDeadPlayersLogRequest
	(*GetDeadPlayersLogResponse)(nil), // 6: game.GetDeadPlayersLogResponse
	(*DeadPlayerLog)(nil),             // 7: game.DeadPlayerLog
	(*GetSelfActionLogRequest)(nil),   // 8: game.GetSelfActionLogRequest
	(*GetSelfActionLogResponse)(nil),  // 9: game.GetSelfActionLogResponse
	(*SelfActionLog)(nil),             // 10: game.SelfActionLog
	(*ExecSelfActionRequest)(nil),     // 11: game.ExecSelfActionRequest
	(*ExecSelfActionResponse)(nil),    // 12: game.ExecSelfActionResponse
	(*GetGameResultRequest)(nil),      // 13: game.GetGameResultRequest
	(*GetGameResultResponse)(nil),     // 14: game.GetGameResultResponse
}
var file_proto_game_proto_depIdxs = []int32{
	4,  // 0: game.GetGameStatusResponse.player_dead_alive:type_name -> game.PlayerDeadAlive
	7,  // 1: game.GetDeadPlayersLogResponse.logs:type_name -> game.DeadPlayerLog
	10, // 2: game.GetSelfActionLogResponse.logs:type_name -> game.SelfActionLog
	0,  // 3: game.GameService.GetActor:input_type -> game.GetActorRequest
	2,  // 4: game.GameService.GetGameStatus:input_type -> game.GetGameStatusRequest
	5,  // 5: game.GameService.GetDeadPlayersLog:input_type -> game.GetDeadPlayersLogRequest
	8,  // 6: game.GameService.GetSelfActionLog:input_type -> game.GetSelfActionLogRequest
	11, // 7: game.GameService.ExecSelfAction:input_type -> game.ExecSelfActionRequest
	13, // 8: game.GameService.GetGameResult:input_type -> game.GetGameResultRequest
	1,  // 9: game.GameService.GetActor:output_type -> game.GetActorResponse
	3,  // 10: game.GameService.GetGameStatus:output_type -> game.GetGameStatusResponse
	6,  // 11: game.GameService.GetDeadPlayersLog:output_type -> game.GetDeadPlayersLogResponse
	9,  // 12: game.GameService.GetSelfActionLog:output_type -> game.GetSelfActionLogResponse
	12, // 13: game.GameService.ExecSelfAction:output_type -> game.ExecSelfActionResponse
	14, // 14: game.GameService.GetGameResult:output_type -> game.GetGameResultResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_game_proto_init() }
func file_proto_game_proto_init() {
	if File_proto_game_proto != nil {
		return
	}
	file_proto_game_proto_msgTypes[7].OneofWrappers = []any{}
	file_proto_game_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_game_proto_goTypes,
		DependencyIndexes: file_proto_game_proto_depIdxs,
		MessageInfos:      file_proto_game_proto_msgTypes,
	}.Build()
	File_proto_game_proto = out.File
	file_proto_game_proto_rawDesc = nil
	file_proto_game_proto_goTypes = nil
	file_proto_game_proto_depIdxs = nil
}
